# Generated by Django 4.0 on 2021-12-13 17:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import src.constants.Constants


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_name', models.TextField(blank=True, max_length=100, null=True)),
                ('character_strain', models.SmallIntegerField(choices=[(1, 'Elitariat'), (2, 'Digitarian'), (3, 'Solestros'), (4, 'Pure_Blood'), (5, 'Baywalker'), (6, 'Yorker'), (7, 'Vegasian'), (8, 'Diesel_Jock'), (9, 'Rover'), (10, 'Saltwise'), (11, 'Full_Dead'), (12, 'Semper_Mort'), (13, 'Lascarian'), (14, 'Remnant'), (15, 'Retrograde'), (16, 'Tainted'), (17, 'Merican'), (18, 'Natural_One'), (19, 'Quiet_Folk'), (20, 'Accensorite'), (21, 'Red_Star'), (22, 'Unborn'), (23, 'Iron'), (24, 'Reclaimer'), (25, 'Unstable')])),
                ('dr_body', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('dr_mind', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('dr_resolve', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('dr_infection', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('bb_body', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('bb_mind', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.TextField(max_length=100)),
                ('skill_category', models.SmallIntegerField(choices=[(1, 'anomaly'), (2, 'wasteland'), (3, 'civilized'), (4, 'combat')], default=3)),
                ('professional_achievement_name', models.TextField(blank=True, max_length=100, null=True)),
                ('professional_achievement', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TradeTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateTimeField(auto_created=True)),
                ('player_a_discord_id', models.BigIntegerField()),
                ('player_a_display_name', models.CharField(max_length=255, verbose_name='trader')),
                ('player_b_discord_id', models.BigIntegerField()),
                ('player_b_display_name', models.CharField(max_length=255, verbose_name='recipient')),
                ('items', models.CharField(max_length=500)),
                ('transaction_completed', models.DateTimeField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, max_length=501, null=True)),
                ('flagged', models.BooleanField(default=False)),
                ('flag_reason', models.TextField(blank=True, max_length=255, null=True)),
                ('flagged_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
            ],
            options={
                'db_table': 'logistics_tradetransaction',
            },
        ),
        migrations.CreateModel(
            name='SkillLevels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skillLevel', models.SmallIntegerField(choices=[(1, 'basic'), (2, 'proficient'), (3, 'master')], default=src.constants.Constants.SkillLevel['basic'])),
                ('mechanics', models.TextField(blank=True, max_length=500, null=True)),
                ('level_skill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='logistics.skill')),
            ],
        ),
        migrations.AddField(
            model_name='skill',
            name='skill_levels',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='logistics.skilllevels'),
        ),
        migrations.CreateModel(
            name='ResearchRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_start', models.DateTimeField(auto_created=True, verbose_name='start')),
                ('research_completed', models.DateTimeField(blank=True, null=True)),
                ('player_display_name', models.CharField(max_length=255, verbose_name='player')),
                ('topic', models.TextField(blank=True, max_length=100, null=True)),
                ('question_1', models.TextField(blank=True, max_length=100, null=True)),
                ('question_2', models.TextField(blank=True, max_length=100, null=True)),
                ('question_3', models.TextField(blank=True, max_length=100, null=True)),
                ('mind_cost', models.SmallIntegerField(blank=True, default=1, null=True)),
                ('time_cost', models.SmallIntegerField(blank=True, default=1, null=True)),
                ('comments', models.TextField(blank=True, max_length=501, null=True)),
                ('flagged', models.BooleanField(default=False)),
                ('flag_reason', models.TextField(blank=True, max_length=255, null=True)),
                ('flagged_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
            ],
            options={
                'db_table': 'logistics_researchrequests',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='auth.user')),
            ],
            options={
                'verbose_name': 'Profile',
            },
        ),
        migrations.CreateModel(
            name='CharacterSkills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_level', models.SmallIntegerField(blank=True, choices=[(1, 'basic'), (2, 'proficient'), (3, 'master')], default=src.constants.Constants.SkillLevel['basic'], null=True)),
                ('has_pfa', models.BooleanField(default=False)),
                ('skill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='logistics.skill')),
                ('skills_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='logistics.character')),
            ],
        ),
        migrations.AddField(
            model_name='character',
            name='character_skills',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='logistics.characterskills'),
        ),
        migrations.AddField(
            model_name='character',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.user'),
        ),
        migrations.CreateModel(
            name='ActionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_start', models.DateTimeField(auto_created=True, verbose_name='start')),
                ('action_completed', models.DateTimeField(blank=True, null=True)),
                ('interrupted', models.BooleanField(blank=True, null=True)),
                ('actor_discord_id', models.BigIntegerField()),
                ('actor_display_name', models.CharField(max_length=255, verbose_name='actor')),
                ('action_type', models.SmallIntegerField(blank=True, choices=[(1, 'brew'), (2, 'build'), (3, 'cook'), (4, 'consume'), (5, 'do'), (6, 'farm'), (7, 'forage'), (8, 'hunt'), (9, 'inject'), (10, 'salvage'), (11, 'smoke'), (12, 'spend'), (13, 'trailblaze'), (14, 'upgrade'), (15, 'use'), (16, 'repair')], null=True)),
                ('items', models.CharField(max_length=255)),
                ('quantity', models.SmallIntegerField(blank=True, null=True)),
                ('mind_cost', models.SmallIntegerField(blank=True, null=True)),
                ('time_cost', models.IntegerField(blank=True, null=True)),
                ('resolve_cost', models.SmallIntegerField(blank=True, null=True)),
                ('materials', models.TextField(blank=True, max_length=500, null=True)),
                ('commentary', models.TextField(blank=True, max_length=500, null=True)),
                ('processed', models.BooleanField(default=False)),
                ('flagged', models.BooleanField(default=False)),
                ('flag_reason', models.TextField(blank=True, max_length=255, null=True)),
                ('flagged_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
            ],
            options={
                'db_table': 'logistics_actionrecord',
            },
        ),
    ]
